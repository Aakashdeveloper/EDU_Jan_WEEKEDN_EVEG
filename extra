JSON
JavaScript Object notation

package.json

// tpo create package json
npm init

// to install 
npm install zone.js --save

npm install zone.js@7.4.5 --save


// to create seed
npm install -g @angular/cli

//Mac or linux
sudo npm install -g @angular/cli

//window
run cmd as admin
npm install -g @angular/cli


// To create  App
ng new productapp

npm start

////////////////////////Day 2///////////////
node_module=> Contaion all depende
Src=> All app code
.editorconfig=> symmetrical coding
.gitigonre=> file i dont want to push
angular.json/angular-cli.json=>
this is very first file that provide all path
package-lock.json=> information about minor version
package.json=> all packages & commands
ReadMe.md=> infromation about app
tsconfig.json=> that convert to .js and make build of app
tslint.json=> linting of code

Ecma Script


package.json=> angular.json=> main.ts || Index.html => app.module.ts=> app.component.ts=> allcomp& module


module  => where we declare all the things  
component=> all logics / html/ css
pipes=> to manupulate the date on run time
services=> to external api/ third party
routing=> to make single page and navigate between pages

main module & main component


.ts
class
import export interface extends

import 


Module => NgModule
Component=> Component
Pipe=> Pipe, PipeTransform
Service=> Injectable
Router=> RouterModule


grids
tables
buttons
glyphicons
panels
navbar
input
modal


/*
One Way Binding
-- Data Binding {{}}
-- Property Binding []
-- Event Binding ()
Two Way Binding [()]
*/


/*\
datatypes
String  = ""
Number = 897.8
Boolean = true/false
any
*/

keywords
var = redeclare & reassign
let = cannot redeclare but reassign
const = cont redeclare & not reassign

function add(){
    var q = 10
}

q not allowed clouser

if(a==10){
    var w = 10
}

w allowed 

if(a==10){
    let g = 10
}

g not allowed

//////////////
function add(a,b){
    return a+b
}

let add = (a,b) => { return a+b }
arrow
fat arrow
lymda


var z = 10
undefined
z == 10 ? 'hiii':'biee'
"hiii"
z > 10 ? 'hiii':'biee'
"biee"


if product == true
if(product)


var a = 10
var b = "my age is" +10

var a = 10
var b = "my age is" +10
undefined
b
"my age is10"
var c = `my age is ${a}`
undefined
c
"my age is 10"

//////
searchBar
passing data from one comp to other
conditional Css
Services


//
routing
modules
share component
router gaurds

lifecycle
ngOnChanges
ngOnInit

/*
out act like event
input act like property
*/


function add(a,b){
    return a+b
}


var sum = add(1,3);